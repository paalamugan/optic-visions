{"version":3,"sources":["webpack:///./src/app/employees/add-employees/add-employees.component.html","webpack:///./src/app/employees/add-employees/add-employees.component.scss","webpack:///./src/app/employees/add-employees/add-employees.component.ts","webpack:///./src/app/employees/edit-employees/edit-employees.component.html","webpack:///./src/app/employees/edit-employees/edit-employees.component.scss","webpack:///./src/app/employees/edit-employees/edit-employees.component.ts","webpack:///./src/app/employees/employees.module.ts","webpack:///./src/app/employees/employees.router.ts","webpack:///./src/app/employees/list-employees/list-employees.component.html","webpack:///./src/app/employees/list-employees/list-employees.component.scss","webpack:///./src/app/employees/list-employees/list-employees.component.ts","webpack:///./src/app/services/employee.service.ts"],"names":[],"mappings":"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","file":"employees-employees-module.js","sourcesContent":["module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n  <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n    <div fxFlex class=\\\"form-component-holder mat-elevation-z4\\\">\\n      <mat-toolbar class=\\\"form-header\\\">\\n        <h1 class=\\\"mat-headline\\\"> Add Employee</h1>\\n      </mat-toolbar>\\n      <div  class=\\\"addempmargin\\\" style=\\\"background-color: white;\\\">\\n  \\n        <form fxLayout=\\\"column\\\"  class=\\\"example-container\\\" #addEmployee=\\\"ngForm\\\" (submit)=\\\"OnSubmit()\\\" >\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n          <div fxFlex=\\\"20\\\">\\n              <label class=\\\"example-margin\\\">Employee Name:</label>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput type=\\\"text\\\" #nameInput=\\\"matInput\\\" #nameSelect placeholder=\\\"EmployeeName\\\" pattern=\\\"^[a-zA-Z_ ]*$\\\" [(ngModel)]=\\\"employee.employeeName\\\" name=\\\"employeeName\\\" #name=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n                  </mat-form-field>\\n              \\n                  <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n          \\n                    <div *ngIf=\\\"name.errors.required\\\">\\n                      Name is required.\\n                    </div>\\n                    <div *ngIf=\\\"name.errors.minlength\\\">\\n                      Name must be at least 4 characters long.\\n                    </div>\\n                    <div *ngIf=\\\"name.errors.pattern\\\">\\n                        Name must be a characters long.\\n                      </div>\\n                  </div>\\n               \\n             \\n                </div>\\n             \\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                    <div fxFlex=\\\"20\\\">\\n                        <label class=\\\"example-margin\\\">Mobile Number:</label>\\n                      </div>\\n                      <div fxFlex=\\\"50\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <span matPrefix>+91 &nbsp;</span>\\n              <input matInput type=\\\"tel\\\" placeholder=\\\"MobileNumber\\\" [(ngModel)]=\\\"employee.mobileNumber\\\" pattern=\\\"[0-9]*\\\" maxlength=\\\"10\\\" name=\\\"mobilenumber\\\" #mobilenumber=\\\"ngModel\\\" required minlength=\\\"10\\\">\\n              <mat-icon matSuffix>mode_edit</mat-icon>\\n            </mat-form-field>\\n    \\n            <div *ngIf=\\\"mobilenumber.invalid && (mobilenumber.dirty || mobilenumber.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n    \\n              <div *ngIf=\\\"mobilenumber.errors.required\\\">\\n                Mobile Number is required.\\n              </div>\\n              <div *ngIf=\\\"mobilenumber.errors.minlength\\\">\\n                  Mobile Number must be at least 10 characters long.\\n              </div>\\n              <div *ngIf=\\\"mobilenumber.errors.pattern\\\">\\n                  Mobile Number is not Valid.\\n                </div>\\n            </div>\\n            </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\">\\n                    <label class=\\\"example-margin\\\">Email:</label>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\">\\n             <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"employee.employeeEmail\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\" name=\\\"employeeEmail\\\" #email=\\\"ngModel\\\" required>\\n              </mat-form-field>\\n      \\n              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"mat-body-1 center-align\\\" >\\n      \\n                <div *ngIf=\\\"email.errors.required\\\">\\n                  Email is required.\\n                </div>\\n                <div *ngIf=\\\"email.errors.pattern\\\">\\n                    Not a Valid Email.\\n                  </div>\\n              </div> \\n          \\n         </div>\\n         </div>\\n         <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n            <div fxFlex=\\\"20\\\">\\n                <label class=\\\"example-margin\\\">Password:</label>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Enter your EmployeePassword\\\" [(ngModel)]=\\\"employee.employeePassword\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n              <mat-icon matSuffix  class=\\\"cursor\\\" (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n            </mat-form-field>\\n            <div  *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n      \\n              <div *ngIf=\\\"password.errors.required\\\">\\n                Password is required.\\n              </div>\\n             \\n            </div>\\n          </div>\\n        </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\">\\n                    <label class=\\\"example-margin\\\">Address:</label>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\">\\n             <mat-form-field class=\\\"example-full-width\\\">\\n              <textarea matInput type=\\\"number\\\" placeholder=\\\"Address\\\"  [(ngModel)]=\\\"employee.address\\\"  name=\\\"address\\\" #address=\\\"ngModel\\\" required></textarea>\\n            </mat-form-field>\\n            <div  *ngIf=\\\"address.invalid && (address.dirty || address.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n              <div *ngIf=\\\"address.errors.required\\\">\\n                Address is required.\\n              </div>\\n          \\n            </div>\\n            </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\">\\n                    <label class=\\\"example-margin\\\">Date Of Birth:</label>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\">\\n             <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Date Of Birth\\\" (dateChange)=\\\"addEvent($event)\\\" [(ngModel)]=\\\"employee.DOB\\\" name=\\\"dob\\\" #dob=\\\"ngModel\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\" ></mat-datepicker-toggle>\\n                <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n              <div  *ngIf=\\\"dob.invalid && (dob.dirty || dob.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n                  <div *ngIf=\\\"dob.errors.required\\\">\\n                      Date Of Birth is required.\\n                  </div>\\n              \\n                </div>\\n              </div>\\n              </div>\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                  <div fxFlex=\\\"20\\\">\\n                      <label class=\\\"example-margin\\\">Date Of Joining:</label>\\n                    </div>\\n                    <div fxFlex=\\\"50\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"Date Of Joining\\\" [(ngModel)]=\\\"employee.DOJ\\\" #doj=\\\"ngModel\\\" name=\\\"doj\\\" required>\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n                </mat-form-field>\\n                <div  *ngIf=\\\"doj.invalid && (doj.dirty || doj.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n                    <div *ngIf=\\\"doj.errors.required\\\">\\n                        Date Of Joining is required.\\n                    </div>\\n                \\n                  </div>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" required>\\n                    <section  class=\\\"example-section example-full-width\\\">\\n                    <div fxFlex=\\\"20\\\">\\n                        <label class=\\\"example-margin\\\">Admin Access:</label>\\n                      </div>\\n                    \\n               \\n                 \\n                  <div fxFlex=\\\"50\\\">\\n                  <mat-radio-group [(ngModel)]=\\\"employee.adminAccess\\\" #adminaccess=\\\"ngModel\\\" name=\\\"adminAccess\\\" required>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"Yes\\\">\\n                      Yes\\n                    </mat-radio-button>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"No\\\">\\n                      No\\n                    </mat-radio-button>\\n                   \\n                  </mat-radio-group>\\n                  <div  *ngIf=\\\"adminaccess.invalid && (adminaccess.dirty || adminaccess.touched)\\\" class=\\\"mat-body-1 center-align\\\" style=\\\"position: relative;bottom: 24px;\\\">\\n                      <div *ngIf=\\\"adminaccess.errors.required\\\">\\n                          Select an One Button\\n                      </div>\\n                  \\n                    </div>\\n                  </div>\\n                </section>\\n              </div>\\n              <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                  <div fxFlex=\\\"20\\\">\\n                      <label class=\\\"example-margin\\\">Upload Image:</label>\\n                    </div>\\n                    <div fxFlex=\\\"50\\\">\\n                        <input type=\\\"file\\\"  (change)=\\\"onFileChange($event)\\\" style=\\\"display:none\\\" name=\\\"file-7[]\\\" id=\\\"file-7\\\" class=\\\"inputfile inputfile-6\\\" data-multiple-caption=\\\"{count} files selected\\\" multiple required />\\n                        <label class=\\\"box\\\" for=\\\"file-7\\\"><span [ngStyle]=\\\"styleOne?{'color': 'black'} : {'color': 'white'}\\\"></span> <strong><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"17\\\" viewBox=\\\"0 0 20 17\\\"><path d=\\\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\\\"/></svg> Upload a Image&hellip;</strong></label>\\n                        \\n                </div>\\n            </div> -->\\n              \\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\"></div>\\n                <div fxFlex=\\\"50\\\">\\n                <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"addEmployee.invalid\\\" class=\\\"mat-subheading-2 button-style example-full-width\\\">Save</button>\\n              </div>\\n            </div>\\n        </form>\\n        \\n      </div>\\n  \\n      <!-- <div [hidden]=\\\"!submitted\\\" style=\\\"background-color: white;\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n          <h2 class=\\\"mat-subheading-2 center-align\\\">You submitted the following:</h2>\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n            <div >Name</div>\\n            <div>{{ model.name }}</div>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n            <div>Number</div>\\n            <div>{{ model.number }}</div>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"mat-body center-align\\\">\\n            <div >Password</div>\\n            <div>{{ model.pwd}}</div>\\n          </div>\\n          <br>\\n          <button mat-raised-button  type=\\\"submit\\\" class=\\\"button-style\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n        </div>\\n      </div> -->\\n    </div>\\n  </div>\\n  \"","module.exports = \".mat-form-field {\\n  padding-left: 10px; }\\n\\n.container {\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.form-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.form-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\n.button-style {\\n  background-color: #327ebd;\\n  font-weight: bold; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-margin {\\n  /* margin: 0 10px; */\\n  padding: 26px; }\\n\\n.center-align {\\n  color: red;\\n  padding-left: 10px; }\\n\\n.addempmargin {\\n  margin: 10px 0px;\\n  font-size: .875rem; }\\n\\n.inputfile-6 + label span {\\n  width: 325px; }\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Employee } from 'src/app/models/employee';\nimport { CompanySignup } from 'src/app/models/companysignup';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Admin } from 'src/app/models/admin';\nimport { MatSnackBar, MatDatepickerInputEvent, MatInput } from '@angular/material';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-employees',\n  templateUrl: './add-employees.component.html',\n  styleUrls: ['./add-employees.component.scss']\n})\nexport class AddEmployeesComponent implements OnInit {\n  dob:Date = null;\n  doj:Date = null;\n  hide=true;\n  selectedfile:File=null;\n  companysignup:CompanySignup = null;\n  employee:Employee=new Employee(\"\",'','','','','',this.dob,this.doj,'','','',this.companysignup);\n  today = new Date();\n  minDate = new Date(this.today);\n  isLoading: boolean = false;\n  @ViewChild('nameInput') nameInput: MatInput;\n  @ViewChild('nameSelect') nameSelect: ElementRef;\n  constructor(private employeeservice:EmployeeService,private loginservice:LoginService,private router:Router,private snackBar:MatSnackBar) {\n   }\n\n  ngOnInit() {\n    ( function ( document, window, index ) {\n      var inputs = document.querySelectorAll( '.inputfile' );\n      Array.prototype.forEach.call( inputs, function( input )\n      {\n        var label\t = input.nextElementSibling,\n          labelVal = label.innerHTML;\n    \n        input.addEventListener( 'change', function( e )\n        {\n          var fileName = '';\n          if( this.files && this.files.length > 1 )\n            fileName = ( this.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', this.files.length );\n          else\n            fileName = e.target.value.split( '\\\\' ).pop();\n    \n          if( fileName )\n            label.querySelector( 'span' ).innerHTML = fileName;\n          else\n            label.innerHTML = labelVal;\n        });\n    \n        // Firefox bug fix\n        input.addEventListener( 'focus', function(){ input.classList.add( 'has-focus' ); });\n        input.addEventListener( 'blur', function(){ input.classList.remove( 'has-focus' ); });\n      });\n    }( document, window, 0 ));\n    \n    this.loginservice.getUserName().subscribe((data:Admin)=>{\n      if(data.Identifier===\"admin\"||data.Identifier===\"employee-admin\"){\n        this.companysignup=data.company;\n        this.employee.adminAccess=\"No\";\n      }else{\n        this.router.navigateByUrl('login');\n      }\n      },\n    (err)=>{\n      if(err instanceof HttpErrorResponse){\n       if(err.status === 401){\n          this.router.navigateByUrl('login');\n        }\n      }\n     }\n     );\n    }\n  countfilelength:number;\n  addEvent(event: MatDatepickerInputEvent<Date>){\n    var dobdate=event.value.getFullYear()+18;\n    this.minDate = new Date(dobdate, 0, 1);\n  }\n  onFileChange(event) {\n   this.countfilelength=event.target.files.length;\n    this.selectedfile=<File>event.target.files[0];\n    }\n\n  OnSubmit(){\n\n    if(!this.employee.DOB){\n      return this.snackBar.open(\"Fill Date of birth Field\",'Alert' ,{\n        duration:4000\n     });\n    }\n\n    if(!this.employee.DOJ){\n        return this.snackBar.open(\"Fill Date of joining Field\",'Alert' ,{\n          duration:4000\n      })\n    }\n\n    this.employee.companySignUp=this.companysignup;\n    let formData=new FormData;\n    formData.append('avatar', this.selectedfile);\n    formData.append('employeeName', this.employee.employeeName);\n    formData.append('mobileNumber', this.employee.mobileNumber);\n    formData.append('employeeEmail', this.employee.employeeEmail);\n    formData.append('employeePassword', this.employee.employeePassword);\n    formData.append('address', this.employee.address);\n    formData.append('DOB', this.employee.DOB.toUTCString());\n    formData.append('DOJ', this.employee.DOJ.toUTCString());\n    formData.append('adminAccess',this.employee.adminAccess);\n    formData.append('uuid',this.employee.companySignUp.uuid);\n\n    this.isLoading = true;\n    this.employeeservice.addEmployee(formData).subscribe((response) => {\n        this.isLoading = false;\n        this.snackBar.open(\"Employee successfully Added\",'Ok' ,{\n           duration:3000\n        });\n        this.employee = new Employee(\"\",'','','','','',null,null,'','','',this.companysignup);\n        this.nameInput.focus();\n    },\n    (err) => {\n        if(err instanceof HttpErrorResponse){\n            this.isLoading = false;\n            if (err.status === 401) {\n                return this.router.navigateByUrl('login');\n            }\n\n            this.snackBar.open(err.error.error,'Alert' ,{\n                duration:3000\n            });\n\n            // this.employee=err.error.data;\n            // var DOBDate = new Date(err.error.data.DOB);\n            // var DOJDate = new Date(err.error.data.DOJ);\n            // this.employee.DOB=DOBDate;\n            // this.employee.DOJ=DOJDate;\n            // this.nameInput.focus();\n            // const nameselect=<HTMLInputElement>this.nameSelect.nativeElement;\n            // setTimeout(function() {  nameselect.select(); }, 50);\n        }\n    });\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n  <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n    <div fxFlex class=\\\"form-component-holder mat-elevation-z4\\\">\\n      <mat-toolbar class=\\\"form-header\\\">\\n        <h1 class=\\\"mat-headline\\\"> Edit Employee</h1>\\n      </mat-toolbar>\\n      <div  class=\\\"addempmargin\\\" style=\\\"background-color: white;\\\">\\n  \\n        <form fxLayout=\\\"column\\\"  class=\\\"example-container\\\" #addEmployee=\\\"ngForm\\\" >\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n          <div fxFlex=\\\"20\\\">\\n              <label class=\\\"example-margin\\\">Employee Name:</label>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"EmployeeName\\\" pattern=\\\"^[a-zA-Z_ ]*$\\\" [(ngModel)]=\\\"employee.employeeName\\\" name=\\\"employeeName\\\" #name=\\\"ngModel\\\" required minlength=\\\"4\\\">\\n                  </mat-form-field>\\n              \\n                  <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n          \\n                    <div *ngIf=\\\"name.errors.required\\\">\\n                      Name is required.\\n                    </div>\\n                    <div *ngIf=\\\"name.errors.minlength\\\">\\n                      Name must be at least 4 characters long.\\n                    </div>\\n                    <div *ngIf=\\\"name.errors.pattern\\\">\\n                        Name must be a characters long.\\n                      </div>\\n                  </div>\\n               \\n             \\n                </div>\\n             \\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                    <div fxFlex=\\\"20\\\">\\n                        <label class=\\\"example-margin\\\">Mobile Number:</label>\\n                      </div>\\n                      <div fxFlex=\\\"50\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <span matPrefix>+91 &nbsp;</span>\\n              <input matInput type=\\\"tel\\\" placeholder=\\\"MobileNumber\\\" [(ngModel)]=\\\"employee.mobileNumber\\\" pattern=\\\"[0-9]*\\\" maxlength=\\\"10\\\" name=\\\"mobilenumber\\\" #mobilenumber=\\\"ngModel\\\" required minlength=\\\"10\\\">\\n              <mat-icon matSuffix>mode_edit</mat-icon>\\n            </mat-form-field>\\n    \\n            <div *ngIf=\\\"mobilenumber.invalid && (mobilenumber.dirty || mobilenumber.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n    \\n              <div *ngIf=\\\"mobilenumber.errors.required\\\">\\n                Mobile Number is required.\\n              </div>\\n              <div *ngIf=\\\"mobilenumber.errors.minlength\\\">\\n                  Mobile Number must be at least 10 characters long.\\n              </div>\\n              <div *ngIf=\\\"mobilenumber.errors.pattern\\\">\\n                  Mobile Number is not Valid.\\n                </div>\\n            </div>\\n            </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\">\\n                    <label class=\\\"example-margin\\\">Email:</label>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\">\\n             <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"employee.employeeEmail\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\" name=\\\"employeeEmail\\\" #email=\\\"ngModel\\\" required>\\n              </mat-form-field>\\n      \\n              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"mat-body-1 center-align\\\" >\\n      \\n                <div *ngIf=\\\"email.errors.required\\\">\\n                  Email is required.\\n                </div>\\n                <div *ngIf=\\\"email.errors.pattern\\\">\\n                    Not a Valid Email.\\n                  </div>\\n              </div> \\n          \\n         </div>\\n         </div>\\n         <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n          <div fxFlex=\\\"20\\\">\\n              <label class=\\\"example-margin\\\">Employee Password:</label>\\n          </div>\\n          <div fxFlex=\\\"50\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Change your Employee Password\\\" [(ngModel)]=\\\"employee.employeePassword\\\" name=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n            <mat-icon matSuffix  class=\\\"cursor\\\" (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\">\\n                    <label class=\\\"example-margin\\\">Address:</label>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\">\\n             <mat-form-field class=\\\"example-full-width\\\">\\n              <textarea matInput type=\\\"number\\\" placeholder=\\\"Address\\\"  [(ngModel)]=\\\"employee.address\\\"  name=\\\"address\\\" #address=\\\"ngModel\\\" required></textarea>\\n            </mat-form-field>\\n            <div  *ngIf=\\\"address.invalid && (address.dirty || address.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n              <div *ngIf=\\\"address.errors.required\\\">\\n                Address is required.\\n              </div>\\n          \\n            </div>\\n            </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\">\\n                    <label class=\\\"example-margin\\\">Date Of Birth:</label>\\n                  </div>\\n                  <div fxFlex=\\\"50\\\">\\n             <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Date Of Birth\\\" [(ngModel)]=\\\"employee.DOB\\\" name=\\\"dob\\\" #dob=\\\"ngModel\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n              <div  *ngIf=\\\"dob.invalid && (dob.dirty || dob.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n                  <div *ngIf=\\\"dob.errors.required\\\">\\n                      Date Of Birth is required.\\n                  </div>\\n              \\n                </div>\\n              </div>\\n              </div>\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                  <div fxFlex=\\\"20\\\">\\n                      <label class=\\\"example-margin\\\">Date Of Joining:</label>\\n                    </div>\\n                    <div fxFlex=\\\"50\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"Date Of Joining\\\"  [(ngModel)]=\\\"employee.DOJ\\\" #doj=\\\"ngModel\\\" name=\\\"doj\\\" required>\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker4 disabled=\\\"false\\\"></mat-datepicker>\\n                </mat-form-field>\\n                <div  *ngIf=\\\"doj.invalid && (doj.dirty || doj.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n                    <div *ngIf=\\\"doj.errors.required\\\">\\n                        Date Of Joining is required.\\n                    </div>\\n                \\n                  </div>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" required>\\n                    <section  class=\\\"example-section example-full-width\\\">\\n                    <div fxFlex=\\\"20\\\">\\n                        <label class=\\\"example-margin\\\">Admin Access:</label>\\n                      </div>\\n                    \\n               \\n                 \\n                  <div fxFlex=\\\"50\\\">\\n                  <mat-radio-group [(ngModel)]=\\\"employee.adminAccess\\\" #adminaccess=\\\"ngModel\\\" name=\\\"adminAccess\\\" required>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"Yes\\\">\\n                      Yes\\n                    </mat-radio-button>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"No\\\">\\n                      No\\n                    </mat-radio-button>\\n                  </mat-radio-group>\\n                  <div  *ngIf=\\\"adminaccess.invalid && (adminaccess.dirty || adminaccess.touched)\\\" class=\\\"mat-body-1 center-align\\\">\\n                      <div *ngIf=\\\"adminaccess.errors.required\\\">\\n                          Select a One Button\\n                      </div>\\n                  \\n                    </div>\\n                  </div>\\n                </section>\\n              </div>\\n              <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                  <div fxFlex=\\\"20\\\">\\n                      <label class=\\\"example-margin\\\">Upload Image:</label>\\n                    </div>\\n                    <div fxFlex=\\\"50\\\">\\n                        <input type=\\\"file\\\"  (change)=\\\"onFileChange($event)\\\" style=\\\"display:none\\\" name=\\\"file-7[]\\\" id=\\\"file-7\\\" class=\\\"inputfile inputfile-6\\\" data-multiple-caption=\\\"{count} files selected\\\" multiple required />\\n                        <label class=\\\"box\\\" for=\\\"file-7\\\"><span [ngStyle]=\\\"styleOne?{'color': 'black'} : {'color': 'white'}\\\"></span> <strong><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"17\\\" viewBox=\\\"0 0 20 17\\\"><path d=\\\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\\\"/></svg> Upload a Image&hellip;</strong></label>\\n                        \\n                </div>\\n            </div> -->\\n              \\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                <div fxFlex=\\\"20\\\"></div>\\n                <div fxFlex=\\\"50\\\">\\n          <button mat-raised-button class=\\\"mat-subheading-2 button-style example-full-width\\\" (click)=\\\"OnSubmit()\\\">Update</button>\\n              </div>\\n            </div>\\n        </form>\\n        \\n      </div>\\n  \\n      \\n    </div>\\n  </div>\\n   \"","module.exports = \".mat-form-field {\\n  padding-left: 10px; }\\n\\n.container {\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.form-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.form-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\n.button-style {\\n  background-color: #327ebd;\\n  font-weight: bold; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-margin {\\n  /* margin: 0 10px; */\\n  padding: 26px; }\\n\\n.center-align {\\n  color: red;\\n  padding-left: 10px; }\\n\\n.addempmargin {\\n  margin: 10px 0px;\\n  font-size: .875rem; }\\n\\n.inputfile-6 + label span {\\n  width: 325px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\nimport { Employee } from 'src/app/models/employee';\nimport{ActivatedRoute, Router} from '@angular/router';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { CompanySignup } from 'src/app/models/companysignup';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Admin } from 'src/app/models/admin';\nimport { LoginService } from 'src/app/services/login.service';\n@Component({\n  selector: 'app-edit-employees',\n  templateUrl: './edit-employees.component.html',\n  styleUrls: ['./edit-employees.component.scss']\n})\nexport class EditEmployeesComponent implements OnInit {\n  dob:Date = null;\n  doj:Date = null;\nDOBtoString:string;\nDOJtoString:string;\n  hide=true;\n  styleOne:boolean;\n  selectedfile:File=null;\n  companysignup:CompanySignup = null;\n  // constructor( private dialogRef: MatDialogRef<EditEmployeesComponent>, @Inject(MAT_DIALOG_DATA) public data: Employee) { }\n  constructor(private route:ActivatedRoute,private loginservice:LoginService, private employeeservice:EmployeeService,private router:Router,private snackBar:MatSnackBar){}\n  employee:Employee=new Employee(\"\",'','','','','',this.dob,this.doj,'','','',this.companysignup);\n  countfilelength:number;\n  isLoading: boolean = false;\n  onFileChange(event) {\n    // let count=<File>event.target.files\n    this.styleOne=true;\n    this.countfilelength=event.target.files.length;\n      this.selectedfile=<File>event.target.files[0];\n      \n    \n   }\n  ngOnInit() {\n    ;( function ( document, window, index )\n    {\n      var inputs = document.querySelectorAll( '.inputfile' );\n      Array.prototype.forEach.call( inputs, function( input )\n      {\n        var label\t = input.nextElementSibling,\n          labelVal = label.innerHTML;\n    \n        input.addEventListener( 'change', function( e )\n        {\n          var fileName = '';\n          if( this.files && this.files.length > 1 )\n            fileName = ( this.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', this.files.length );\n          else\n            fileName = e.target.value.split( '\\\\' ).pop();\n    \n          if( fileName )\n            label.querySelector( 'span' ).innerHTML = fileName;\n          else\n            label.innerHTML = labelVal;\n        });\n    \n        // Firefox bug fix\n        input.addEventListener( 'focus', function(){ input.classList.add( 'has-focus' ); });\n        input.addEventListener( 'blur', function(){ input.classList.remove( 'has-focus' ); });\n      });\n    }( document, window, 0 ));\n    let id =this.route.snapshot.params['id'];\n    this.isLoading = true;\n    this.loginservice.getUserName().subscribe((data:Admin)=>{\n      if(data.Identifier===\"admin\" || data.Identifier===\"employee-admin\"){\n        this.employeeservice.getemployee(id).subscribe(\n          (data:Employee)=>{\n              this.isLoading = false;\n            this.employee=data;\n            let CDOB=new Date(data.DOB);\n            this.employee.DOB=CDOB;\n            let CDOJ=new Date(data.DOJ);\n            this.employee.DOJ=CDOJ;\n          },\n          (err)=>{\n              this.isLoading = false;\n            if(err instanceof HttpErrorResponse){\n              if(err.status===401){\n                this.router.navigateByUrl('login');\n               }\n            }\n          }\n        );\n      }else{\n        this.router.navigateByUrl('login');\n      }\n    },\n    (err)=>{\n        this.isLoading = false;\n      if(err instanceof HttpErrorResponse){\n       if(err.status === 401){\n          this.router.navigateByUrl('login');\n        }\n      }\n     }\n     );\n   \n   \n   \n  }\n  \n  OnSubmit(){\n    let formData=new FormData;\n//     if(this.dob!=this.employee.DOB){\n// this.DOBtoString=this.employee.DOB.toLocaleDateString();\n//     }else{\n//       this.DOBtoString=JSON.stringify(this.employee.DOB);\n//     }\n//     if(this.doj!=this.employee.DOJ){\n//       this.DOJtoString=this.employee.DOJ.toLocaleDateString();\n//           }else{\n//             this.DOJtoString=JSON.stringify(this.employee.DOJ);\n//           }\n\n//     if(this.countfilelength >0){\n//       if(this.selectedfile.type===\"image/jpeg\" || this.selectedfile.type===\"image/png\"){\n//       formData.append('avatar', this.selectedfile);\n//       formData.append('employeeName', this.employee.employeeName);\n//       formData.append('mobileNumber', this.employee.mobileNumber);\n//      formData.append('employeeEmail', this.employee.employeeEmail);\n//       formData.append('employeePassword', this.employee.employeePassword);\n//       formData.append('address', this.employee.address);\n//      formData.append('DOB', this.employee.DOB.toUTCString());\n//       formData.append('DOJ', this.employee.DOJ.toUTCString());\n//       formData.append('adminAccess',this.employee.adminAccess);\n//       formData.append('fk_companyid',this.employee.fk_companyid);\n//       this.employeeservice.updateformdataEmployee(formData,this.employee.uuid).subscribe(\n//         (resultData:Employee)=>{\n//          this.router.navigate(['employees/listemployees']);\n//         },\n//         (err)=>{\n//           if(err instanceof HttpErrorResponse){\n//             if(err.status===401){\n//               this.router.navigateByUrl('login');\n//              }\n//           }\n//         }\n//         );\n//       }else{\n//           this.snackBar.open(\"Select Only Jpeg and Png format Image\",\"Alert\",{\n//             duration:10000\n// })\n//       }\n//     }else{\n    this.isLoading = true;\n    this.employeeservice.updateemployee(this.employee).subscribe((resultData:Employee)=>{\n        this.isLoading = false;\n        this.router.navigate(['employees/listemployees']);\n    },\n    (err)=>{\n        this.isLoading = false;\n        if(err instanceof HttpErrorResponse){\n            if(err.status===401){\n            this.router.navigateByUrl('login');\n            }\n        }\n    });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmployeesRouterModule } from './employees.router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n\t\t\tMatButtonModule,\n\t\t\tMatToolbarModule,\n\t\t\tMatCardModule,\n\t\t\tMatTabsModule,\n\t\t\tMatIconModule,\n\t\t\tMatNativeDateModule,\n\t\t\tMatDatepickerModule\n\t\t} from '@angular/material';\nimport { MatInputModule } from '@angular/material';\nimport {MatPaginatorModule} from '@angular/material';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {  ReactiveFormsModule } from '@angular/forms';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { FormsModule }   from '@angular/forms';\nimport { AddEmployeesComponent } from './add-employees/add-employees.component';\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\nimport { AuthGuard } from '../guards/auth.guard';\nimport {MatTableModule} from '@angular/material/table';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from '../guards/token-interceptor.service';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { EditEmployeesComponent } from './edit-employees/edit-employees.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tEmployeesRouterModule,\n\t\tFlexLayoutModule,\n\t\tMatButtonModule,\n\t\tMatToolbarModule,\n\t\tMatCardModule,\n\t\tMatTabsModule,\n\t\tMatIconModule,\n\t\t MatInputModule,\n\t\t ReactiveFormsModule,\n\t\t FormsModule,\n\t\t MatRadioModule,\n\t\t MatDatepickerModule,\n\t\t MatNativeDateModule,\n\t\t MatTableModule,\n\t\t MatSnackBarModule,\n\t\t MatPaginatorModule,\n\t\t MatDialogModule,\n         MatProgressSpinnerModule\n\t],\n\tdeclarations: [AddEmployeesComponent, ListEmployeesComponent,EditEmployeesComponent],\n\tproviders:[AuthGuard],\n\tentryComponents:[]\n})\nexport class EmployeeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddEmployeesComponent } from './add-employees/add-employees.component';\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\nimport { AuthGuard } from '../guards/auth.guard';\nimport { EditEmployeesComponent } from './edit-employees/edit-employees.component';\n\n\nconst employeeroutes: Routes = [\n  \t{ path: 'addemployees', component: AddEmployeesComponent },\n    { path: 'listemployees', component: ListEmployeesComponent },\n    { path: 'editemployees/:id', component: EditEmployeesComponent },\n  \t\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(employeeroutes)\n  \t],\n  exports: [\n    RouterModule\n  ]\n})\nexport class EmployeesRouterModule {}","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n  <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n\\t<div fxFlex class=\\\"form-component-holder mat-elevation-z4\\\">\\n\\t\\t<mat-toolbar class=\\\"form-header\\\">\\n\\t\\t\\t<h1 class=\\\"mat-headline\\\">List Employeee</h1>\\n\\t\\t</mat-toolbar>\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n    <div class=\\\"mat-elevation-z8\\\" style=\\\"overflow-y:auto\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n    \\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let i=index\\\"> {{i+1}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"avatar\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align: center;\\\"> Avatar </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"text-align: center;\\\"> \\n          <img width=\\\"40\\\" height=\\\"40\\\" [style.borderRadius]=\\\"'50%'\\\" src=\\\"/assets/images/avatar.png\\\">\\n        </td>\\n      </ng-container>\\n\\n      <!--EmployeeEmail -->\\n      <ng-container matColumnDef=\\\"employeeName\\\">\\n        <th mat-header-cell *matHeaderCellDef> EmployeeName </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.employeeName}} </td>\\n      </ng-container>\\n    \\n      <!-- EmployeeEmail -->\\n      <ng-container matColumnDef=\\\"employeeEmail\\\">\\n        <th mat-header-cell *matHeaderCellDef> EmployeeEmail </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.employeeEmail}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"address\\\">\\n        <th mat-header-cell *matHeaderCellDef> Address </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"mobileNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef> Mobile No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mobileNumber}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"DOB\\\">\\n        <th mat-header-cell *matHeaderCellDef> DOB </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DOB}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"DOJ\\\">\\n        <th mat-header-cell *matHeaderCellDef> DOJ </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DOJ}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"adminAccess\\\">\\n        <th mat-header-cell *matHeaderCellDef> AdminAccess </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.adminAccess}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"edit\\\">\\n          <th mat-header-cell *matHeaderCellDef>  </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" [hidden]=\\\"editHidden\\\"> <mat-icon class=\\\"cursor\\\" (click)=\\\"employeeEdit(element)\\\">edit</mat-icon> </td>\\n        </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n     \\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 15, 20]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\t</div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd, th {\\n  padding-right: 10px !important; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatTableDataSource,MatPaginator, MatDialog} from '@angular/material';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { Employee } from 'src/app/models/employee';\nimport { Utils } from 'src/app/utils';\nimport{Router} from '@angular/router';\nimport { EditEmployeesComponent } from '../edit-employees/edit-employees.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Data } from 'src/app/models/data';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Admin } from 'src/app/models/admin';\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.scss']\n})\nexport class ListEmployeesComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'avatar', 'employeeName', 'employeeEmail','address','mobileNumber','DOB','DOJ','adminAccess','edit'];\n  public employees: Array<Employee> = [];\n  editHidden:boolean=false;\n  public dataSource = new MatTableDataSource<Employee>(this.employees);\n  constructor(private employeeservice:EmployeeService,private loginservice:LoginService,private router:Router,private dialog?: MatDialog) { }\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  isLoading: boolean = false;\n  ngOnInit() {\n    this.isLoading = true;\n    this.loginservice.getUserName().subscribe((data:Admin)=>{\n      if(data.Identifier===\"employee\"){\n        this.editHidden=true;\n      }\n        this.employeeservice.getAllemployee().subscribe((resultData:Array<Employee>)=>{\n            this.isLoading = false;\n          this.employees=resultData;\n            this.dataSource = new MatTableDataSource<Employee>(this.employees);\n            this.dataSource.paginator = this.paginator;\n          },\n          (err)=>{\n            this.isLoading = false;\n            if(err instanceof HttpErrorResponse){\n              if(err.status===401){\n                this.router.navigateByUrl('login');\n               }\n            }\n          }\n          );\n    });\n    \n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  employeeEdit(employee:Employee){\n    this.router.navigate(['employees/editemployees',employee.uuid]);\n    // this.isPopupOpened = true;\n \n    // const dialogRef = this.dialog.open(EditEmployeesComponent, {\n    \n    //   data: employee\n\n    // });\n \n\n    // dialogRef.afterClosed().subscribe(product => {\n    //   this.isPopupOpened = false;\n    // });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Employee } from '../models/employee';\nimport { Utils } from '../utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  constructor(private httpClient: HttpClient) { }\n  addEmployee(employee:any){\n    return this.httpClient.post(`${Utils.addemployeeURL()}`,employee);\n  }\n  getAllemployee(){\n    return this.httpClient.get(`${Utils.getAllemployeeURL()}`);\n  }\n  getemployee(id:any){\n    return this.httpClient.get(`${Utils.getemployeeURL()}`+`/${id}`);\n  }\n  updateemployee(employee:Employee){\n    return this.httpClient.put(`${Utils.updateemployeeURL()}`+`/${employee.uuid}`,employee);\n  }\n  updateformdataEmployee(formData:any,uuid:string){\n    return this.httpClient.put(`${Utils.updateemployeeURL()}`+`/${uuid}`,formData);\n  }\n}\n"],"sourceRoot":""}