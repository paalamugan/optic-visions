{"version":3,"sources":["webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/models/employee.ts","webpack:///./src/app/services/signup.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Utils } from '../utils';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate, CanActivateChild {\n    \n    constructor(private _router:Router) {}\n\n    isLoggedIn(): boolean {\n\n        if(Utils.isLoggedIn()) {\n            return true;\n        }\n\n        Utils.isLoggedOut();\n        this._router.navigate(['/login']);\n        return false;\n    }\n\n    canActivate(): boolean {\n        return this.isLoggedIn();\n    }\n\n    canActivateChild(): boolean {\n        return this.isLoggedIn();\n    }\n\n    // canLoad(): boolean {\n    //     return this.isLoggedIn();\n    // }\n}","import { CompanySignup } from \"./companysignup\";\n\nexport class Employee{\n    constructor( public uuid:string,\n        public employeeId:string,\n        public employeeName:string,\n        public mobileNumber:string,\n        public employeeEmail:string,\n        public employeePassword:string,\n        public address:string,\n        public DOB:Date,\n        public DOJ:Date,\n        public adminAccess:string,\n        public userImage:string,\n        public fk_companyid:string,\n        public companySignUp:CompanySignup\n          ){}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Utils } from '../utils';\nimport { CompanySignup } from '../models/companysignup';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getAll() {\n    return this.httpClient.get(`${Utils.getSignupURL()}`);\n  }\n  public getOne(company:CompanySignup){\n    return this.httpClient.get(`${Utils.getOneSignupURL()}`+`/${company.uuid}`);\n  }\n  public submitRegister(body:any) {\n    return this.httpClient.post(`${Utils.getSignupURL()}`,body);\n  }\n  public UpdateFormDataCompany(formData:any,uuid:string) {\n    return this.httpClient.put(`${Utils.updateCompanyURL()}`+`/${uuid}`,formData);\n  }\n  public UpdateCompany(company:CompanySignup) {\n    return this.httpClient.put(`${Utils.updateCompanyURL()}`+`/${company.uuid}`,company);\n  }\n  public deleteCompany(uuid:string) {\n    return this.httpClient.delete(`${Utils.deleteSignupURL()}`+`/${uuid}`);\n  }\n  \n}\n"],"sourceRoot":""}