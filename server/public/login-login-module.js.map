{"version":3,"sources":["webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/models/login.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"background-color:#e0e0e0;\\\">\\n\\n\\t\\t<mat-card fxFlex=\\\"50\\\"  class=\\\"mat-elevation-z4 visionheight\\\">\\n      <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n        <mat-spinner></mat-spinner>\\n      </div>\\n\\n\\t\\t\\t\\t<mat-card-title style=\\\"text-align:center\\\" class=\\\"opticvision\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"assets/camera.png\\\" width=\\\"50px\\\"> \\n\\t\\t\\t\\t\\t\\t\\t<span>ptic Visions</span>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-card-title>\\n\\t\\t\\t\\t\\t<mat-card-content class=\\\"opticvision_1\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab-group >\\n\\t\\t\\t\\t\\t\\t<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"login\\\" (click)=\\\"admin()\\\">Admin</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"20\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"login\\\" (click)=\\\"employee()\\\">Employee</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"Admin\\\"> \\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"heading_1\\\">ADMIN BLOCK</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t<form class=\\\"example-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" #userForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email\\\" #adminloginemail=\\\"ngModel\\\"  [(ngModel)]=\\\"adminlogin.email\\\"  name =\\\"email\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error class=\\\"error-message mat-body-1 center-align\\\" *ngIf=\\\"adminloginemail.touched && !adminloginemail.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error  *ngIf=\\\"adminloginemail.errors.required\\\">Email is Required</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"adminloginemail.errors.pattern\\\">Not a Valid Email</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"password\\\" #adminloginpass=\\\"ngModel\\\" [(ngModel)]=\\\"adminlogin.password\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <mat-icon class=\\\"cursor\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-error class=\\\"error-message mat-body-1 center-align\\\" *ngIf=\\\"adminloginpass.touched && !adminloginpass.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"adminloginpass.errors.required\\\">Password is Required</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlexOffset=\\\"50\\\" fxFlex=\\\"50\\\" class=\\\"forget\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 style=\\\"cursor:pointer\\\" (click)=\\\"forgetPassword()\\\">Forget Password?</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login\\\" (click)=\\\"loginAdmin($event)\\\" [disabled]=\\\"userForm.invalid\\\">SIGN IN</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 style=\\\" color: #3f6aa7;\\\">Or Sign Up For Admin</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center stretch\\\" class=\\\"example-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"login\\\" [disabled]=\\\"userForm.valid\\\" (click)=\\\"signup()\\\">Sign Up</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"Employee\\\"> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"heading_1\\\">EMPLOYEE BLOCK</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form class=\\\"example-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" #userempForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email\\\" #employeeloginemail=\\\"ngModel\\\"  [(ngModel)]=\\\"employeelogin.email\\\"  name =\\\"email\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\" required >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error class=\\\"error-message mat-body-1 center-align\\\" *ngIf=\\\"employeeloginemail.touched && !employeeloginemail.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"employeeloginemail.errors.required\\\">Email is Required</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"employeeloginemail.errors.pattern\\\">Not a Valid Email</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"password\\\" #employeeloginpass=\\\"ngModel\\\" [(ngModel)]=\\\"employeelogin.password\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon class=\\\"cursor\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-error class=\\\"error-message mat-body-1 center-align\\\" *ngIf=\\\"employeeloginpass.touched && !employeeloginpass.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"employeeloginpass.errors.required\\\">Password is Required</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start none\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex=\\\"50\\\" class=\\\"forget\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 style=\\\"cursor:pointer\\\">Forget Password?</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login\\\" (click)=\\\"loginEmployee()\\\" [disabled]=\\\"userempForm.invalid\\\">SIGN IN</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t </mat-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t  </mat-tab-group>\\n\\t\\t\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t</mat-card>\\n</div>\\n<!-- <div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\" style=\\\"background-color:whitesmoke\\\">\\n\\t\\n\\t<mat-card>\\n\\t\\t<div>\\n\\t\\t\\t<mat-card-title>\\n\\t\\t\\t\\t\\t<div class=\\\"opticvision\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/camera.png\\\" width=\\\"30px\\\"> \\n\\t\\t\\t\\t\\t\\t<span>ptic Visions</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</mat-card-title>\\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<form class=\\\"example-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" (submit)=\\\"loginUser($event)\\\" #userForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"form_bottom\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email\\\" #email=\\\"ngModel\\\"  [ngModel]=\\\"emailname\\\"  name =\\\"email\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\\\"color:red\\\" *ngIf=\\\"email.touched && !email.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"email.errors.required\\\">Email is Required</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"form_bottom\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" #password1=\\\"ngModel\\\" [ngModel]=\\\"passwordname\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon> \\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span style=\\\"color:red\\\" *ngIf=\\\"password1.touched && !password1.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"password1.errors.required\\\">Password is Required</div>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login\\\" [disabled]=\\\"userForm.invalid\\\">Log In</button>\\n\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align:right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3><a  class=\\\"redirect\\\" [routerLink]=\\\"['/register']\\\">Signup For Admin</a></h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t\\t</div>\\n\\t</mat-card>\\n\\t\\n</div>\\n\\t\\t -->\\n\\n\\n\\n\\n\\n<!-- <div fxLayout=\\\"row\\\" fxFlexFill fxLayoutAlign=\\\"center\\\" style=\\\"background-color:#677069;\\\">\\n\\n\\t\\t\\t\\t<div class=\\\" mat-elevation-z4\\\" >\\n\\t\\t\\t\\t\\t\\t<mat-card class=\\\"card\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-card-title>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>SIGN IN</h2>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-card-title>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" (submit)=\\\"loginUser($event)\\\" #userForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter your email\\\" #email=\\\"ngModel\\\"  [ngModel]=\\\"emailname\\\"  name =\\\"email\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\\\"color:red\\\" *ngIf=\\\"email.touched && !email.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"email.errors.required\\\">Email is Required</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter your password\\\" type=\\\"password\\\" name=\\\"password\\\" #password1=\\\"ngModel\\\" [ngModel]=\\\"passwordname\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-form-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <span style=\\\"color:red\\\" *ngIf=\\\"password1.touched && !password1.valid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"password1.errors.required\\\">Password is Required</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\">log in</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"redirect\\\" [routerLink]=\\\"['/register']\\\">Register an account</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-card>\\n\\t        \\n\\n\\t</div>\\n\\n</div> -->\"","module.exports = \".redirect {\\n  color: #607d8b; }\\n\\n.login {\\n  font-size: 20px;\\n  font-weight: bold;\\n  color: white;\\n  font-family: -webkit-body; }\\n\\n.forget {\\n  color: dodgerblue;\\n  text-align: right; }\\n\\n.opticvision {\\n  font-size: 60px;\\n  font-family: -webkit-body; }\\n\\n.opticvision span {\\n  color: dodgerblue; }\\n\\n.mat-form-field {\\n  font-size: 17px; }\\n\\n.form_bottom {\\n  margin: 20px 0px; }\\n\\n.visionheight {\\n  background-color: #ffffff; }\\n\\n@media only screen and (min-width: 1281px) {\\n  .opticvision_1 {\\n    font-size: 18px;\\n    font-family: -webkit-body; } }\\n\\n@media only screen and (min-width: 768px) and (max-width: 1024px) {\\n  .opticvision {\\n    font-size: 30px;\\n    font-family: -webkit-body; } }\\n\\n.heading_1 {\\n  text-align: center;\\n  color: #ffffff;\\n  background-color: dodgerblue; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {  AdminLogin,EmployeeLogin } from '../models/login';\nimport { LoginService } from '../services/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material';\nimport { SharedService } from '../services/shared.service';\nimport { Utils } from '../utils';\ndeclare var $: any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n  hide = true;\n  emailname:string;\n  adminlogin:AdminLogin=new AdminLogin('','');\n  employeelogin:EmployeeLogin=new EmployeeLogin('','');\nadminhide:boolean=true;\nisLoading: boolean = false;\n  constructor(private router: Router,private loginservice:LoginService,private snackBar:MatSnackBar) {\n  }\n\n  ngOnInit() {\n    if (Utils.isLoggedIn()) {\n        this.router.navigate(['/dashboard']); \n    }\n  }\n\n  admin(){\n  this.adminhide=true;\n  }\n  employee(){\nthis.adminhide=false;\n  }\n  loginAdmin() {\n      this.isLoading = true;\n    this.loginservice.adminLogin(this.adminlogin)\n      .subscribe(\n       (res:any)=>{\n        this.isLoading = false;\n        this.router.navigate(['/dashboard']);\n         localStorage.setItem('token',res.token);\n       },\n       err =>{\n         if(err instanceof HttpErrorResponse){\n           if(err.status){\n               this.isLoading = false;\n                this.snackBar.open(err.error,'Alert' ,{\n                    duration:3000\n               });\n           }\n         }\n        \n       }\n      );\n  }\n  loginEmployee() {\n    this.loginservice.employeeLogin(this.employeelogin)\n    .subscribe(\n     (res:any)=>{\n       if(res.Identifier === \"employee-admin\"){\n        this.router.navigate(['/dashboard']);\n        localStorage.setItem('token',res.token);\n        // localStorage.setItem('Identifier',res.Identifier_User);\n        }else{\n        this.router.navigate(['/employees']);\n        localStorage.setItem('token',res.token);\n        \n        // this.auth.setLoggedIn(res.Identifier);\n       }\n        \n     },\n     err =>{\n       if(err instanceof HttpErrorResponse){\n         if(err.status === 300){\n             this.snackBar.open(err.error,'Alert' ,{\n               duration:3000\n            });\n         }\n       }\n      \n     }\n    );\n}\n  signup(){\n    this.router.navigate(['/register']);\n  }\n  showNotification(from, align){\n    const type = ['primary'];\n\n    // const color = Math.floor((Math.random() * 4) + 1);\n\n    $.notify({\n        icon: \"notifications\",\n        message: \"Email has been sent to ur mail, Check ur Mail..\"\n\n    },{\n        type: type[0],\n         timer: 3000,\n        placement: {\n            from: from,\n            align: align\n        },\n        template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon backgroundcolor\" role=\"alert\">' +\n          '<i data-notify=\"dismiss\" class=\"material-icons cursor\" style=\"margin: 8px;\">close</i></button>' +\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n          '<span data-notify=\"title\">{1}</span> ' +\n          '<span data-notify=\"message\" style=\"position: relative;bottom:6px;\">{2}</span>' +\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\n            '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n          '</div>' +\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n        '</div>'\n    });\n}\n  forgetPassword(){\n    if(this.adminlogin.email != \"\"){\n      this.loginservice.forgetPassword(this.adminlogin)\n      .subscribe(\n        (data:any)=>{\n          if(data.success === true){\n            this.showNotification('top','center');\n          }\n          this.adminlogin.email=null;\n          this.adminlogin.password=null;\n      },\n      (err)=>{\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 300){\n              this.snackBar.open(err.error,'Alert' ,{\n                duration:3000\n             });\n          }\n        }\n      }\n      )\n    }else{\n      this.snackBar.open('Email Field is Not Empty','Alert',{\n        duration:3000\n      })\n      \n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule, Routes } from '@angular/router'; \nimport { \n  MatCardModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatIconModule,\n  MatInputModule,\n  MatToolbarModule,MatSnackBarModule\n } from '@angular/material';\n import {MatTabsModule} from '@angular/material/tabs';\n import {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nconst appRoutes: Routes = [\n    { path: '', component: LoginComponent },\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatButtonModule,\n    FormsModule,\n    MatButtonToggleModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    RouterModule.forChild(appRoutes),\n  ],\n  declarations: [LoginComponent],\n  providers:[]\n})\nexport class LoginModule { }\n","export class AdminLogin{\n    constructor(public email:string,public password:string){}\n}\nexport class EmployeeLogin{\n    constructor(public email:string,public password:string){}\n}"],"sourceRoot":""}